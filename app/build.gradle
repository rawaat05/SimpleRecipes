plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.ksp)
    alias(libs.plugins.firebase.crashlytics)
}

android {
    namespace 'com.nomaan.simplerecipes'
    compileSdk 34

    defaultConfig {
        applicationId "com.nomaan.simplerecipes"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.nomaan.simplerecipes.InstrumentationTestRunner"

        ksp {
            arg("room.incremental", "true")
            arg("room.schemaLocation", "$projectDir/schemas")
        }

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "API_BASE_URL", "\"https://www.themealdb.com/api/json/v1/\"")
            manifestPlaceholders.clearTextTraffic = true

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true
        }
        release {
            buildConfigField("String", "API_BASE_URL", "\"https://www.themealdb.com/api/json/v1/\"")
            manifestPlaceholders.clearTextTraffic = false

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false

            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig = true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.androidxComposeCompiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    sourceSets {
        test {
            resources.srcDirs += ['src/test/resources']
        }
        androidTest {
            resources.srcDirs += ['src/androidTest/assets']
        }
    }
    testOptions {
        unitTests.setReturnDefaultValues(true)
    }
}

dependencies {
    // Core
    implementation libs.androidx.core.ktx

    // Lifecycle
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.runtime.compose
    implementation libs.androidx.lifecycle.service

    // Compose & Material
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.ui.ui
    implementation libs.androidx.compose.ui.tooling.core
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.compose.material3
    implementation libs.androidx.constraint.layout.compose

    // Retrofit
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    // Koin
    implementation libs.koin.core
    implementation libs.koin.android
    implementation libs.koin.androidx.compose

    // Room
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    ksp libs.room.compiler

    // Coil
    implementation libs.coil.kt.core
    implementation libs.coil.kt.compose
    implementation libs.coil.kt.svg

    // Compose Navigation
    implementation libs.androidx.navigation.compose

    // Firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics.kts
    implementation libs.firebase.analytics.kts

    // Datastore
    implementation libs.datastore.preferences

    // Test
    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    testImplementation libs.mockk.android
    testImplementation libs.mockk.agent
    testImplementation libs.mock.webserver
    testImplementation libs.turbine

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.androidx.ui.test.junit
    androidTestImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.mock.webserver
    androidTestImplementation libs.turbine
    androidTestImplementation libs.koin.test

    debugImplementation libs.androidx.compose.ui.tooling.core
    debugImplementation libs.androidx.ui.test.manifest
}